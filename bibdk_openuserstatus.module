<?php

module_load_include('inc', 'bibdk_openuserstatus', 'includes/bibdk_openuserstatus.form');

/**
 * Impelements user_profile_tabs (
 * @see ding_user.module)
 * */
function bibdk_openuserstatus_user_profile2_tabs() {
  $ret = new stdClass();
  $ret->label = t('my_loanerstatus', array(), array('context' => 'bibdk_openuserstatus'));
  $ret->form = 'bibdk_openuserstatus_form';
  $ret->type = 'bibdk_openuserstatus';
  return $ret;
}

/**
 * Implements hook_menu().
 * @return array
 */
function bibdk_openuserstatus_menu() {
  $items = array();
  $items['user/loanerstatus'] = array(
    'title' => t('Loanerstatus'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('bibdk_openuserstatus_form'),
    'access arguments' => array('access content'),
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

/**
 * Implements hook_theme().
 * @return array
 */
function bibdk_openuserstatus_theme() {
  return array(
    'bibdk_openuserstatus' => array(
      'variables' => array(
        'tables' => '',
      ),
      'template' => 'theme/bibdk_openuserstatus',
    ),
    'bibdk_openuserstatus_table' => array(
      'variables' => array(
        'count' => '',
        'table' => '',
      ),
      'template' => 'theme/bibdk_openuserstatus_table'
    ),
  );
}

/**
 * Implement hook_ctools_plugin_api().
 */
function bibdk_openuserstatus_ctools_plugin_api($module, $api) {
  if ($module == 'page_manager' && $api == 'pages_default') {
    return array('version' => 1);
  }
}

/**
 * do a request
 * @return bool|string | UserStatusResponse
 */
function bibdk_openuserstatus_request() {

  $favourites = bibdk_openuserstatus_get_favourites();
  if (empty($favourites)) {
    return array();
  }

  $ret = array();
  foreach ($favourites as $favourite) {
    $params = bibdk_openuserstatus_get_params($favourite);
    if (isset($params['error'])) {
      $error->getUserStatusResponse->getUserStatusError->{'$'}=$params['error'];
      $ret[$favourite->getAgencyId()] = new UserStatusResponse($error);
    }
    else {
      $res = $favourite->getUserStatus();
      if ($res) {
        $ret[$favourite->getAgencyId()] = $res;
        continue;
      }
      $client = new ting_client_class();
      // this is the real request
      $response = $client->do_request('openuserstatus', $params);
      if ($response) {
        $response = new UserStatusResponse($response);
        $ret[$favourite->getAgencyId()] = $response;
        $favourite->setUserStatus($response);
      }
    }
  }
  return $ret;
}

function bibdk_openuserstatus_get_params($favourite) {
  $params = array();
  $params['action'] = 'getUserStatusRequest';
  $params['userId'] = $favourite->getUserId();
  $params['userPincode'] = $favourite->getPinCode();
  $params['agencyId'] = 'DK-' . $favourite->getAgencyId();
  $params['outputType'] = 'json';

  if (!$params['userId'] || !$params['userPincode']) {
    $params['error'] = t('incomplete_user_data', array(), array('context' => 'bibdk_openuserstatus'));
  }
  return $params;
}

function bibdk_openuserstatus_get_favourites() {
  static $ret;
  if (!isset($ret)) {
    if (isset($_SESSION['bibdk_favourites'])) {
      $favourites = $_SESSION['bibdk_favourites'];
    }
    else {
      _bibdk_favourite_set_agencies();
    }
    $favourites = isset($_SESSION['bibdk_favourites']) ? $_SESSION['bibdk_favourites'] : NULL;
    foreach ($favourites as $favourite) {
      $ret[] = unserialize($favourite);
    }
  }
  return $ret;
}

function bibdk_openuserstatus_get_test_params() {
  $params = array();
  $params['action'] = 'getUserStatusRequest';
  $params['userId'] = '0413392648';
  $params['userPincode'] = '1234';
  $params['agencyId'] = 'DK-737600';
  $params['outputType'] = 'json';
  return $params;
}

/**
 * @param $agencyId
 * @return null|string
 */
function bibdk_openuserstatus_get_agencyname($agencyId) {
  $client = new ting_client_class();
  $response = $client->do_request('agency', array('agencyId' => $agencyId, 'action' => 'findLibraryRequest'));
  if (isset($response->findLibraryResponse->pickupAgency)) {
    $agency = $response->findLibraryResponse->pickupAgency[0];
    return $agency->agencyName->{'$'};
  }
  else {
    return t('agencyname_not_found', array(), array('context' => 'bibdk_openuserstatus'));
  }
}