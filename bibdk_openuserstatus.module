<?php
module_load_include('inc', 'bibdk_openuserstatus', 'includes/bibdk_openuserstatus.form');
/**
 * Impelements user_profile_tabs (
 * @see ding_user.module)
 * */
function bibdk_openuserstatus_user_profile2_tabs() {
  global $user;
  $username = isset($user->mail) ? ' - ' . $user->mail : '';
  $ret = new stdClass();
  $ret->label = t('my_loanerstatus @username', array('@username' => $username), array('context' => 'bibdk_openuserstatus'));
  $ret->form = 'bibdk_openuserstatus_form';
  $ret->type = 'bibdk_openuserstatus';
  return $ret;
}

/**
 * Implement hook_ctools_plugin_api().
 */
function bibdk_openuserstatus_ctools_plugin_api($module, $api) {
  if ($module == 'page_manager' && $api == 'pages_default') {
    return array('version' => 1);
  }
}

/**
 * do a request
 * @return UserStatusResponse|bool|string
 */
function bibdk_openuserstatus_request() {

  $favourites = bibdk_openuserstatus_get_favourites();
  if (empty($favourites)) {
    return array();
  }

  $ret = array();
  foreach ($favourites as $favourite) {
    $params = bibdk_openuserstatus_get_params($favourite);
    if (isset($params['error'])) {
      $error->getUserStatusResponse->getUserStatusError->{'$'} = $params['error'];
      $ret[$favourite->getAgencyId()] = new UserStatusResponse($error);
    }
    else {
      $res = $favourite->getUserStatus();
      if ($res) {
        $ret[$favourite->getAgencyId()] = $res;
        continue;
      }
      $client = new ting_client_class();
      // this is the real request
      $response = $client->do_request('openuserstatus', $params);
      if ($response) {
        $response = new UserStatusResponse($response);
        $ret[$favourite->getAgencyId()] = $response;
        $favourite->setUserStatus($response);
      }
    }
  }
  return $ret;
}

/** Implements hook_bibdk_reservation_complete
 *
 * unset $_SESSION variable for given library to
 * refresh orderlist
 *
 * @param mixed $pids; an array of order pid's
 * @param mixed $result; .. orderid of completed order
 */
function bibdk_openuserstatus_bibdk_reservation_complete($pids, $result) {
  $library = BibdkReservationOrderObject::GetObject()->getBranchId();
  if (strpos($library, 'DK-') === 0) {
    // strip 'DK-' from librarynumber
    $library = substr($library, 3, strlen($library));
  }
  if (isset($_SESSION['userStatus'][$library])) {
    unset($_SESSION['userStatus'][$library]);
  }
}


function bibdk_openuserstatus_get_params($favourite) {
  $params = array();
  $params['action'] = 'getUserStatusRequest';
  $params['userId'] = $favourite->getUserId();
  $params['userPincode'] = $favourite->getPinCode();
  $params['agencyId'] = 'DK-' . $favourite->getAgencyId();
  $params['outputType'] = 'json';

  if (!$params['userId'] || !$params['userPincode']) {
    $params['error'] = t('incomplete_user_data', array(), array('context' => 'bibdk_openuserstatus'));
  }
  return $params;
}

function bibdk_openuserstatus_get_favourites() {
  static $ret;
  if (!isset($ret)) {
    if (isset($_SESSION['bibdk_favourites'])) {
      $favourites = $_SESSION['bibdk_favourites'];
    }
    else {
      _bibdk_favourite_set_agencies();
    }
    $favourites = isset($_SESSION['bibdk_favourites']) ? $_SESSION['bibdk_favourites'] : NULL;
    foreach ($favourites as $favourite) {
      $ret[] = unserialize($favourite);
    }
  }
  return $ret;
}

/**
 * @param $agencyId
 * @return null|string
 */
function bibdk_openuserstatus_get_agencyname($agencyId) {
  $client = new ting_client_class();
  $response = $client->do_request('agency', array('agencyId' => $agencyId, 'action' => 'findLibraryRequest'));
  if (isset($response->findLibraryResponse->pickupAgency)) {
    $agency = $response->findLibraryResponse->pickupAgency[0];
    return $agency->agencyName->{'$'};
  }
  else {
    return t('agencyname_not_found', array(), array('context' => 'bibdk_openuserstatus'));
  }
}